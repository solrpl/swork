This is a *very* simple framework for workflow.

Goals:
 * simple
 * programmer-friendliness - most bugs detected on compile time

Usage:

 1. Automatic transition

		Collection<Stage<YourRequest, YourResponse>> stages = ...
		YourRequest request = ...
		
		Workflow<YourRequest, YourResponse, YourStateModel> workflow = new Workflow<YourRequest, YourResponse, YourStateModel>();

		workflow.addAllStages(stages);
		workflow.addOutput(new ConvertRequestResponseOutputStage<YourRequest, YourResponse>());
		
		YourResponse response = workflow.process(request);


 2. SemiAutomatic
 
 		Collection<Stage<YourRequest, YourResponse>> stages = ...
		YourRequest request = ...
		
		Workflow<YourRequest, YourResponse, YourStateModel> workflow = new Workflow<YourRequest, YourResponse, YourStateModel>();

		workflow.addAllStages(stages);
		workflow.addOutput(new ConvertRequestResponseOutputStage<YourRequest, YourResponse>());
		
		Collection<YourStateModel> state = workflow.proceed(request);
		// check state and contiuue processing
		...
		Collection<YourStateModel> state = workflow.proceed(request, YourStateModel.STATE_X);
		
		// check state - should be final state
		...
        YourResponse response = workflow.convert(request);
		
Todo:
 * branches
 * state achieved when all contributors were executed